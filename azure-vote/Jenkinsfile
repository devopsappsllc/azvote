pipeline {
    agent any
    environment {
     REGISTRY = "bharathazacr.azurecr.io"
     PROJECT  = "azvote"
     COMPONENT_NAME= "app" 
     IMAGE = "${env.PROJECT_NAME}/${env.COMPONENT_NAME}"
     BRANCH =  "${GIT_BRANCH}"
    }
        
    stages {
        stage('Get config parameters') {
           steps {
		    script {
			env.GIT_COMMIT = sh (script: "git log -n 1 --pretty='%H'", returnStdout: true)
			echo "Curret Build Branch : $BRANCH"
			if ( BRANCH == 'master') {
  				env.IMAGE_TAG = sh (script: "echo release-${GIT_COMMIT}", returnStdout: true).trim() 
				echo "Assigning Image Tag : ${IMAGE_TAG}"
			}
			else {
				env.IMAGE_TAG = sh (script: "echo release-${GIT_COMMIT}", returnStdout: true).trim() 
				echo "Assigning Image Tag : ${IMAGE_TAG}"	    
			    }
		     }
           	}
        }
	    
stage('Docker Build and Push') {
       steps {
        withCredentials([usernamePassword(credentialsId: 'AZ_login_creds', passwordVariable: 'password', usernameVariable: 'username')]) {
        	sh  'az login -u <username> -p <password>'
		sh  'az acr repository delete --name $REGISTRY --image ${PROJECT}:latest'
		sh 'az acr repository list -n --name $REGISTRY/${PROJECT}'
                }
            }
        } 
	    
stage('Docker Build and Push') {
       steps {
        withCredentials([usernamePassword(credentialsId: 'acr', passwordVariable: 'password', usernameVariable: 'username')]) {
        sh  'echo $password | docker login $REGISTRY -u $username --password-stdin'
	sh  'cd azure-vote && docker build -t ${REGISTRY}/${PROJECT}:${IMAGE_TAG} .'
	sh  'docker image tag ${REGISTRY}/${PROJECT}:${IMAGE_TAG} ${REGISTRY}/${PROJECT}:latest '
	sh  'docker push ${REGISTRY}/${PROJECT} --all-tags '
        echo 'Docker build and push successful'
                }
            }
        } 
    }

post {
    always {
        cleanWs()
           }
    }
}
